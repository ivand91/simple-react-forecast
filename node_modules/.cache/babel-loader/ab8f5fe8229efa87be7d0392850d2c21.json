{"ast":null,"code":"import _classCallCheck from \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\forecast\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './App.css';\nimport Now from '../components/Now';\nimport Days from '../components/Days';\nimport FindCity from '../components/FindCity/FindCity';\nimport Message from '../components/Message/Message';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        city: event.target.value\n      });\n    };\n\n    _this.showForcast = function () {\n      var showForDays = [];\n\n      for (var i = 0; i <= 5; i++) {\n        showForDays.push(moment().add(i, 'days').format(\"YYYY-MM-DD\") + \" 15:00:00\");\n      }\n\n      axios.get('https://api.openweathermap.org/data/2.5/weather?q=' + _this.state.city + '&units=metric&lang=hr&appid=a033c80fc22a346b73c366e384f8f6f8').then(function (response) {\n        console.log(_this.state);\n\n        if (response.data.cod === 200) {\n          _this.setState({\n            name: response.data.name,\n            weather: response.data.weather[0].main,\n            icon: 'http://openweathermap.org/img/w/' + response.data.weather[0].icon + '.png',\n            temp: Math.round(response.data.main.temp),\n            isForecastShowed: true\n          });\n        } else {\n          _this.setState({\n            isForecastShowed: false\n          });\n        }\n      });\n      axios.get('https://api.openweathermap.org/data/2.5/forecast?q=' + _this.state.city + '&units=metric&lang=hr&appid=a033c80fc22a346b73c366e384f8f6f8').then(function (response) {\n        var list = response.data.list;\n        var forecastList = [];\n\n        for (var _i = 0; _i < list.length; _i++) {\n          if (showForDays.includes(list[_i].dt_txt)) {\n            forecastList.push(list[_i]);\n          }\n        }\n\n        _this.setState({\n          list: forecastList\n        });\n      });\n    };\n\n    _this.state = {\n      name: null,\n      weather: null,\n      icon: null,\n      temp: 0,\n      list: [],\n      city: null,\n      isForecastShowed: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showForcast = _this.showForcast.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var data;\n\n      if (this.state.isForecastShowed) {\n        data = [React.createElement(Now, {\n          key: \"0\",\n          name: this.state.name,\n          weather: this.state.weather,\n          icon: this.state.icon,\n          temp: this.state.temp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(Days, {\n          key: \"1\",\n          days: this.state.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })];\n      } else {\n        data = React.createElement(Message, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FindCity, {\n        changed: this.handleChange,\n        clicked: this.showForcast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), data);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\xampp\\htdocs\\forecast\\src\\containers\\App.js"],"names":["React","Component","axios","moment","Now","Days","FindCity","Message","App","props","handleChange","event","setState","city","target","value","showForcast","showForDays","i","push","add","format","get","state","then","response","console","log","data","cod","name","weather","main","icon","temp","Math","round","isForecastShowed","list","forecastList","length","includes","dt_txt","bind"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './App.css';\nimport Now from '../components/Now';\nimport Days from '../components/Days';\nimport FindCity from '../components/FindCity/FindCity';\nimport Message from '../components/Message/Message';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname : null,\n\t\t\tweather : null,\n\t\t\ticon : null,\n\t\t\ttemp : 0,\n\t\t\tlist : [],\n\t\t\tcity : null,\n\t\t\tisForecastShowed : false\n\t\t}\n\t\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.showForcast = this.showForcast.bind(this);\n\t}\n\t  \n\thandleChange = (event) => {\n\t\tthis.setState({city: event.target.value});\n\t}\n\n\tshowForcast = ( ) => {\n\n\t\tlet showForDays = [];\n\t\tfor(let i = 0; i <= 5; i++) {\n\t\t\tshowForDays.push(moment().add(i, 'days').format(\"YYYY-MM-DD\") + \" 15:00:00\");\n\t\t}\n\n\t\taxios.get('https://api.openweathermap.org/data/2.5/weather?q=' + this.state.city + '&units=metric&lang=hr&appid=a033c80fc22a346b73c366e384f8f6f8').then(response => {\n\t\t\t\n\t\t\tconsole.log(this.state);\n\t\t\n\t\t\tif(response.data.cod === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tname : response.data.name,\n\t\t\t\t\tweather : response.data.weather[0].main,\n\t\t\t\t\ticon : 'http://openweathermap.org/img/w/' + response.data.weather[0].icon + '.png',\n\t\t\t\t\ttemp : Math.round(response.data.main.temp),\n\t\t\t\t\tisForecastShowed : true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisForecastShowed : false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\taxios.get('https://api.openweathermap.org/data/2.5/forecast?q=' + this.state.city + '&units=metric&lang=hr&appid=a033c80fc22a346b73c366e384f8f6f8').then(response => {\n\t\t\t\n\t\t\tlet list = response.data.list;\n\t\t\tlet forecastList = [];\n\t\t\t\n\t\t\tfor(let i = 0; i < list.length; i++) {\n\t\t\t\tif(showForDays.includes(list[i].dt_txt)) {\n\t\t\t\t\tforecastList.push(list[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tlist : forecastList\n\t\t\t});\n\t\t\t\n\t\t});\n\t}\n\n  \trender() {\n\t\t\n\t\tlet data;\n\n\t\tif(this.state.isForecastShowed) {\n\t\t\tdata = [\n\t\t\t\t<Now \n\t\t\t\t\tkey=\"0\"\n\t\t\t\t\tname={this.state.name}\n\t\t\t\t\tweather={this.state.weather} \n\t\t\t\t\ticon={this.state.icon}\n\t\t\t\t\ttemp={this.state.temp} />,\n\t\t\t\t<Days key=\"1\" days={this.state.list} />\n\t\t\t];\n\n\t\t} else {\n\t\t\tdata = <Message />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<FindCity \n\t\t\t\t\tchanged={this.handleChange}\n\t\t\t\t\tclicked={this.showForcast} />\n\t\t\t\t{data}\n\t\t\t</div>\n\t\t);\n  \t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}